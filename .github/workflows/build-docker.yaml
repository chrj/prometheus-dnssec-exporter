---
name: build.docker

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.14.0'

      - name: Install dependencies
        run: |
          go version
          go get -u golang.org/x/lint/golint

      # these ldflags settings effectively strip the binary making it smaller.
      # in some instances 'export CGO_ENABLED=0' is also required to build a static binary.
      - name: Run build
        run: go build -ldflags="-w -s" .

      - name: Run vet & lint
        run: |
          go vet .
          golint .

      - name: test
        run: go test -v

      # each job runs in a separate environment. upload our built artifact so that
      # it can be made available in the deploy job.
      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: prometheus-dnssec-exporter
          path: prometheus-dnssec-exporter

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v2

    # https://github.com/docker/build-push-action/blob/master/docs/advanced/tags-labels.md
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        # list of Docker images to use as base name for tags
        # ghcr.io/username/app
        images: |
          haraldkoch/prometheus-dnssec-exporter
        # generate Docker tags based on the following events/attributes
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: prometheus-dnssec-exporter

    - name: executable
      run: chmod +x prometheus-dnssec-exporter

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy to Docker registry
      uses: docker/build-push-action@v2
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
